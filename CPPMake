#!/bin/bash

add_libmath()
{
    echo "Does your Makefile needs the Math lib ? : [o/n]"
    read libm
    echo
    local libm="${libm,,}"

    if [[ "$libm" == "o" ]] || [[ "$libm" == "oui" ]] ||
	   [[ "$libm" == "y" ]] || [[ "$libm" == "yes" ]];
    then
	if [[ "$lib" == "on" ]];
	then
	    echo -e "LDFLAGS\t\t+=\t-lm" >> Makefile
	else
	    echo -e "LDFLAGS\t\t=\t-lm" >> Makefile
	fi
	lib="on"
    fi
}

add_libopengl()
{
    echo "Does your Makefile needs the OpenGL lib ? : [o/n]"
    read libGL
    echo
    local libGL="${libGL,,}"

    if [[ "$libGL" == "o" ]] || [[ "$libGL" == "oui" ]] ||
	   [[ "$libGL" == "y" ]] || [[ "$libGL" == "yes" ]];
    then
	if [[ "$lib" == "on" ]];
	then
	    echo -e "LDFLAGS\t\t+=\t-lGL" >> Makefile
	else
	    echo -e "LDFLAGS\t\t=\t-lGL" >> Makefile
	fi
	lib="on"
    fi
}

add_libsfml()
{
    echo "Does your Makefile needs the SFML lib ? : [o/n]"
    read libsfml
    echo
    local libsfml="${libsfml,,}"
    
    if [[ "$libsfml" == "o" ]] || [[ "$libsfml" == "oui" ]] ||
	   [[ "$libsfml" == "y" ]] || [[ "$libsfml" == "yes" ]];
    then
	if [[ "$lib" == "on" ]];
	then
	    echo -e "LDFLAGS\t\t+=\t-lsfml-audio -lsfml-graphics -lsfml-network -lsfml-system sfml-window" >> Makefile
	else
	    echo -e "LDFLAGS\t\t=\t-lsfml-audio -lsfml-graphics -lsfml-network -lsfml-system sfml-window" >> Makefile
	fi
	lib="on"
    fi
}

make_n() {
    echo -e "XX\t\t=\tg++" >> Makefile
    echo >> Makefile

    echo -e "RM\t\t=\trm -f" >> Makefile
    echo >> Makefile

    echo -e "CXXFLAGS\t\t=\t-W -Wall -Wextra -Werror -Wshadow" >> Makefile
    echo -e "CXXFLAGS\t\t+=\t-fstack-protector-strong" >> Makefile
    echo >> Makefile

    echo -e "CPPFLAGS\t=\t-I include" >> Makefile
    echo >> Makefile

    add_libmath
    add_libopengl
    add_libsfml
    if [[ "$lib" == "on" ]];
       then
	   echo >> Makefile
    fi

    echo "Source Directory:"
    read src_dir
    echo

    echo -e "SRC_DIR\t\t=\t$src_dir" >> Makefile

    echo -e "SRC_FILES\t=\tmain.cpp\t\\" >> Makefile
    echo >> Makefile

    echo -e "SRCS\t\t=\t\$(addprefix \$(SRC_DIR)/, \$(SRC_FILES))" >> Makefile
    echo >> Makefile

    echo -e "OBJS\t\t=\t\$(SRCS:.cpp=.o)" >> Makefile
    echo >> Makefile

    echo "Binary Name"
    read bin_name
    echo

    echo -e "NAME\t\t=\t$bin_name" >> Makefile
    echo >> Makefile

    echo -e "all:\t\t\$(NAME)" >> Makefile
    echo >> Makefile

    echo -e "\$(NAME):\t\$(OBJS)" >> Makefile

    if [[ "$lib" == "on" ]];
    then
	echo -e "\t\t\$(XX) -o \$(NAME) \$(OBJS) \$(LDFLAGS)" >> Makefile
    else
	echo -e	"\t\t\$(XX) -o \$(NAME) \$(OBJS)" >> Makefile
    fi

    echo >> Makefile

    echo "clean:" >> Makefile
    echo -e "\t\t\$(RM) \$(OBJS)" >> Makefile
    echo >> Makefile

    echo -e "fclean:\t\tclean" >> Makefile
    echo -e "\t\t\$(RM) \$(NAME)" >> Makefile
    echo >> Makefile

    echo -e "re:\t\tfclean all" >> Makefile
    echo >> Makefile

    echo -e ".PHONY:\t\tall clean fclean re" >> Makefile
}

header()
{
    clear
    for i in $(eval echo "{1..$(tput cols)}"); do echo -n "T"; done
    echo
    echo
}

header

echo "##Press Ctrl+H then enter this file name and press enter" > Makefile
echo >> Makefile

make_n
